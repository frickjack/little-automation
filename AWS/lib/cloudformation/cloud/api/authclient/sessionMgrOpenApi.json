{
  "openapi": "3.0.1",
  "info": {
    "title": "api.frickjack.com session manager api",
    "description": "api.frickjack.com session manager api",
    "contact": {
      "email": "admin@frickjack.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about littleware",
    "url": "https://apps.frickjack.com"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "littleware",
      "description": "littleware api",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apps.frickjack.com"
      }
    }
  ],
  "paths": {
    "/session/{projectid}": {
      "get": {
        "summary": "get information about the presented session token",
        "responses": {
          "200": {
            "description": "return info about the project token passed in a cookie or Authorization header",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionInfo"
                }
              }
            }
          },
          "400": {
            "description": "illegal parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleError"
                }
              }
            }
          },
          "401": {
            "description": "client not authenticated into a session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleError"
                }
              }
            }
          },
          "404": {
            "description": "invalid project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleError"
                }
              }
            }
          },
          "500": {
            "description": "unexpected failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleError"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": 500
            }
          },
          "uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/arn:aws:lambda:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":function:${stageVariables.functionName}/invocations"
              ]
            ]
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "post": {
        "summary": "acquire a session token for project api calls",
        "responses": {
          "200": {
            "description": "return session token in body or as cookie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionInfo"
                }
              }
            }
          },
          "400": {
            "description": "illegal parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleError"
                }
              }
            }
          },
          "401": {
            "description": "client not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleError"
                }
              }
            }
          },
          "404": {
            "description": "invalid project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleError"
                }
              }
            }
          },
          "500": {
            "description": "unexpected failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleError"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": 500
            }
          },
          "uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/arn:aws:lambda:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":function:${stageVariables.functionName}/invocations"
              ]
            ]
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SimpleError": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "SessionInfo": {
        "required": [
          "endpoint",
          "exp"
        ],
        "type": "object",
        "properties": {
          "cellId": {
            "type": "string"
          },
          "iat": {
            "type": "integer"
          },
          "exp": {
            "type": "integer"
          },
          "endpoint": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "authClient": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      }
    }
  }
}

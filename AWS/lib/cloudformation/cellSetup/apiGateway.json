{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "apiLambda": {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "S3Bucket" : { "Ref": "LambdaBucket" },
          "S3Key" : { "Ref": "LambdaKey" }
        },
        "Description" : "hello test function",
        "Environment" : {
          "Variables": { 
            "LittleMessage": "hello" 
          }
        },
        "FunctionName" : { "Fn::Join": [ "-", ["api_frickjack_com", { "Ref": "StackName" }, { "Ref": "StageName" }, "authn"]] },
        "Handler" : "index.lambdaHandler",
        "Layers" : { "Ref": "LambdaLayers" },
        "MemorySize" : 256,
        "Role" : { "Ref": "LambdaRole" },
        "Runtime" : "nodejs10.x",
        "Tags": [
          {
              "Key": "org",
              "Value": "applications"
          },
          {
              "Key": "project",
              "Value": "api.frickjack.com"
          },
          {
              "Key": "stack",
              "Value": { "Ref": "StackName" }
          },
          {
              "Key": "stage",
              "Value": { "Ref": "StageName" }
          },
          {
            "Key": "role",
            "Value": "api"
          }
      ],
      "Timeout" : 3,
        "TracingConfig" : {
          "Mode": "Active"
        }
      }
    }
  },
  "Parameters": {
    "StackName": {
      "Type": "String",
      "Description": "deployment stack - ex api.frickjack.com, reuben.dev.frickjack.com, ...",
      "ConstraintDescription": "should usually be the domain of the deployment"
    },
    "StageName": {
      "Type": "String",
      "Description": "dev stage associated with this stack (prod, pre-prod, qa, dev)",
      "Default" : "prod",
      "AllowedValues": [ "prod", "pre-prod", "qa", "dev" ]
    },
    "LambdaBucket": {
      "Type": "String",
      "Description": "bucket of s3 with lambda package",
      "ConstraintDescription": "must be a valid s3 bucket"
    },
    "LambdaKey": {
      "Type": "String",
      "Description": "key of s3 path to lambda package",
      "ConstraintDescription": "must be a valid s3 object key"
    },
    "LambdaLayers": {
      "Type": "CommaDelimitedList",
      "Description": "Lambda layer ARN list",
      "ConstraintDescription": "comma separated list of lambda layer arn's"
    },
    "LambdaRole": {
      "Type": "String",
      "Description": "arn of IAM role for lambda execution to assume",
      "ConstraintDescription": "IAM role arn"
    }
  }
}
